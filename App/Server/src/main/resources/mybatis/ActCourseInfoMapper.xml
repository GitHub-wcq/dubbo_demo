<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
        "http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">


<!-- <mapper namespace="com.youlanw.app.repository.ActCourseInfoMapper"> -->
<mapper namespace="com.youlanw.app.repository.mysql.ActCourseInfoDao">

    <resultMap id="RM_ActCourseInfo" type="com.youlanw.app.entity.mysql.ActCourseInfo">
        <result property="id" column="id"/>
        <result property="teacherInfoId" column="teacher_info_id"/>
        <result property="name" column="name"/>
        <result property="type" column="type"/>
        <result property="number" column="number"/>
        <result property="videoUrl" column="video_url"/>
        <result property="videoImg" column="video_img"/>
        <result property="updateTime" column="update_time"/>
        <result property="createTime" column="create_time"/>
        <result property="status" column="status"/>
    </resultMap>

    <!-- 用于select查询公用抽取的列 -->
    <sql id="columns">
	    <![CDATA[


		id,teacher_info_id,name,type,number,video_url,video_img,update_time,create_time,status


        ]]>
	</sql>

    <!-- useGeneratedKeys="true" keyProperty="xxx" for sqlserver and mysql -->
    <insert id="insert" useGeneratedKeys="true" keyProperty="id">
        <![CDATA[
        INSERT INTO act_course_info (
        	id ,
        	teacher_info_id ,
        	name ,
        	type ,
        	number ,
        	video_url ,
        	video_img ,
        	update_time ,
        	create_time ,
        	status 
        ) VALUES (
        	#{id} ,
        	#{teacherInfoId} ,
        	#{name} ,
        	#{type} ,
        	#{number} ,
        	#{videoUrl} ,
        	#{videoImg} ,
        	#{updateTime} ,
        	#{createTime} ,
        	#{status} 
        )
    ]]>
        <!--
            oracle: order="BEFORE" SELECT sequenceName.nextval AS ID FROM DUAL
            DB2: order="BEFORE"" values nextval for sequenceName
        <selectKey resultType="java.lang.Long" order="BEFORE" keyProperty="userId">
            SELECT sequenceName.nextval AS ID FROM DUAL
        </selectKey>
        -->
    </insert>

    <update id="update">
    <![CDATA[


        UPDATE act_course_info SET
	        teacher_info_id = #{teacherInfoId} ,
	        name = #{name} ,
	        type = #{type} ,
	        video_url = #{videoUrl} ,
	        video_img = #{videoImg} ,
	        update_time = #{updateTime} ,
	        create_time = #{createTime} ,
	        status = #{status} 
        WHERE 
	        id = #{id} 


        ]]>
	</update>

    <delete id="delete">
    <![CDATA[


        DELETE FROM act_course_info WHERE
        id = #{id} 


        ]]>
    </delete>

    <select id="getById" resultMap="RM_ActCourseInfo">
        SELECT
        <include refid="columns"/>
        <![CDATA[
		    FROM act_course_info 
	        WHERE 
		        id = #{id} 
	    ]]>
    </select>

    <sql id="findPage_where">
        <where>
            <if test="id != null">
                AND id = #{id}
            </if>
            <if test="teacherInfoId != null">
                AND teacher_info_id = #{teacherInfoId}
            </if>
            <if test="name != null">
                AND name = #{name}
            </if>
            <if test="type != null">
                AND type = #{type}
            </if>
            <if test="number != null">
                AND number = #{number}
            </if>
            <if test="videoUrl != null">
                AND video_url = #{videoUrl}
            </if>
            <if test="videoImg != null">
                AND video_img = #{videoImg}
            </if>
            <if test="updateTimeBegin != null">
                AND update_time >= #{updateTimeBegin}
            </if>
            <if test="updateTimeEnd  != null">
                AND update_time &lt;= #{updateTimeEnd}
            </if>
            <if test="createTimeBegin != null">
                AND create_time >= #{createTimeBegin}
            </if>
            <if test="createTimeEnd  != null">
                AND create_time &lt;= #{createTimeEnd}
            </if>
            <if test="status != null">
                AND status = #{status}
            </if>
        </where>
    </sql>

    <select id="count" resultType="long">
        SELECT count(id) FROM act_course_info
        <include refid="findPage_where"/>
    </select>

    <select id="findAll" resultMap="RM_ActCourseInfo">
        SELECT
        <include refid="columns"/>
        FROM act_course_info where 1=1
    </select>

    <select id="select" resultMap="RM_ActCourseInfo">
        SELECT
        <include refid="columns"/>
        FROM act_course_info where 1=1
        <include refid="findPage_where"/>
        limit 0,1
    </select>

    <select id="findPage" resultMap="RM_ActCourseInfo">
        SELECT
        <include refid="columns"/>
        FROM act_course_info
        <include refid="findPage_where"/>
    </select>

    <resultMap id="RM_CourseVoteInfo" type="com.youlanw.app.entity.mysql.dto.CourseVoteInfoVo">
        <result property="courseId" column="courseId"/>
        <result property="courseName" column="courseName"/>
        <result property="videoImg" column="videoImg"/>
        <result property="updateTime" column="updateTime"/>
        <result property="createTime" column="createTime"/>
        <result property="status" column="status"/>
        <result property="teacherId" column="teacherId"/>
        <result property="teacherName" column="teacherName"/>
        <result property="school" column="school"/>
        <result property="votes" column="votes"/>
    </resultMap>

    <select id="getHomeCourses" resultMap="RM_CourseVoteInfo">
		SELECT
            course.id AS courseId,
            course.`name` AS courseName,
            course.video_img AS videoImg,
            course.update_time AS updateTime,
            course.create_time AS createTime,
            course.`status` AS status,
            teacher.id AS teacherId,
            teacher.`name` AS teacherName,
            teacher.school AS school,
            teacher.img_url AS imgUrl,
            SUM(student.vote_count) AS votes
        FROM
          act_course_info AS course
        LEFT JOIN act_teacher_info AS teacher ON course.teacher_info_id = teacher.id
        LEFT JOIN act_student_vote_info AS student ON course.id = student.course_info_id
        <where>
            AND course.status = 1
            <if test="name != null">
                AND teacher.school like '%${name}%' or teacher.`name` LIKE '%${name}%'
            </if>
        </where>
        GROUP BY
          course.id
	</select>
</mapper>

